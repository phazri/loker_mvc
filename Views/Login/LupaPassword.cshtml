@using LokerMVC.Models
@model LokerMVC.Models.ResetPassword
@{
    ViewBag.Title = "Lupa Password";
    Layout = "_MainLayout";
    var urlMain = Context.Items["UrlMain"] as string ?? "";
    var urlApi = Context.Items["UrlApi"] as string ?? "";
}


<h2>Reset Password</h2>
<p>Jika No Hp sudah terdaftar silahkan isi email jika belum maka bisa login dengan google</p>




@using (Html.BeginForm("MintaOtp", "Login", FormMethod.Post, new { id = "formOtp" }))
{
    using (Html.DevExtreme().ValidationGroup())
    {
        @Html.AntiForgeryToken()
        @(Html.DevExtreme().Form<ResetPassword>()
                                                  .OnInitialized("onInitialized")
                                                  .ShowValidationSummary(true)
                                                  .Items(items =>
                                                  {
                                                      items.AddGroup()
                                                           .Items(groupItems =>
                                                           {

                                                               groupItems.AddSimpleFor(x => x.Email)
                                                                         .Label(x => x.Visible(false))
                                                                         .Editor(x => x.TextBox()
                                                                                       .Placeholder("Email")
                                                                                       .ValueChangeEvent("keyup")
                                                                                       .ShowClearButton(true));

                                                           
                                                           });

                                                      items.AddSimpleFor(x => x.IsViaEmail)
                                                                .Label(x => x.Visible(false))
                                                                .Editor(x => x.CheckBox()
                                                                              .ID("checkOtp")
                                                                              .Text("Kirim Via Email")
                                                                              .OnValueChanged("onCheckChanged")
                                                                              .Value(true));


                                                      items.AddGroup()
                                                           .ColCountByScreen(c => c.Md(2).Sm(2).Lg(2))
                                                           .CssClass("buttons-group")
                                                           .Items(groupItems =>
                                                           {

                                                               groupItems.AddButton()
                                                                         .ButtonOptions(b => b.Text("Login With Google")
                                                                                              .Type(ButtonType.Success)
                                                                                              .Width(120)
                                                                                              .OnClick("onRegisterGoogleButtonClick"));


                                                               groupItems.AddButton()
                                                                         .ButtonOptions(b => b.Text("Kirim")
                                                                                              .Type(ButtonType.Default)
                                                                                              .Width(120)
                                                                                              .ID("btnSms")
                                                                                              .UseSubmitBehavior(true));
                                                                                            

                                                           });



                                                  }).FormData(Model))
    }
}

<p>@ViewBag.message</p>




<script>
    function onInitialized(e) {
        formInstance = e.component;
    }
    
    function redirectToHome() {
        window.location.href = '@Url.Action("Index", "Home")';
    }
    
    function onRegisterGoogleButtonClick() {
        var googleSignInUrl = '@urlApi/Login/google-sign-in?redirect=@urlMain/Home/setcookies';
        window.location.href = googleSignInUrl;
    }

    function onCheckChanged(e) {
        if (e.value == true) {
            console.log(e.value);
            $("#checkOtp").dxCheckBox("instance").option("text", "Kirim Via Email");
        } else {
            $("#checkOtp").dxCheckBox("instance").option("text", "Kirim Via SMS");
        }
    }
   


</script>

